import{_ as s,c as i,o as a,a2 as n}from"./chunks/framework.CVSRuG3h.js";const o=JSON.parse('{"title":"@auth","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"interface/jssp-interface-auth.md","filePath":"interface/jssp-interface-auth.md"}'),e={name:"interface/jssp-interface-auth.md"},t=n(`<h1 id="auth" tabindex="-1">@auth <a class="header-anchor" href="#auth" aria-label="Permalink to &quot;@auth&quot;">​</a></h1><h2 id="함수" tabindex="-1">함수 <a class="header-anchor" href="#함수" aria-label="Permalink to &quot;함수&quot;">​</a></h2><h3 id="func-createaccesstoken-key-string-string" tabindex="-1"><strong><code>func createAccessToken(key string) string</code></strong> <a class="header-anchor" href="#func-createaccesstoken-key-string-string" aria-label="Permalink to &quot;**\`func createAccessToken(key string) string\`**&quot;">​</a></h3><p>OAuth2 Web 토큰을 생성합니다.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handler login {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  func </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(auth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, req </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) (res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UserService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createUserId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.accessToken </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createAccessToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="func-createrefreshtoken-key-string-string" tabindex="-1"><strong><code>func createRefreshToken(key string) string</code></strong> <a class="header-anchor" href="#func-createrefreshtoken-key-string-string" aria-label="Permalink to &quot;**\`func createRefreshToken(key string) string\`**&quot;">​</a></h3><p>OAuth2 Refresh token을 생성합니다.</p><h2 id="interface-정의" tabindex="-1">interface 정의 <a class="header-anchor" href="#interface-정의" aria-label="Permalink to &quot;interface 정의&quot;">​</a></h2><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auth {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userId string;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handler profile {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  func </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(auth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) (res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(auth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auth.userId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auth.userId.length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      res.code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.unauthorized;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9),h=[t];function k(l,p,r,E,d,c){return a(),i("div",null,h)}const y=s(e,[["render",k]]);export{o as __pageData,y as default};
