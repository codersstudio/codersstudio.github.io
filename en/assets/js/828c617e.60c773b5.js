"use strict";(self.webpackChunkcoders=self.webpackChunkcoders||[]).push([[8043],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},815:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4},s="struct type",o={unversionedId:"tutorial-jssp/datatype-struct",id:"tutorial-jssp/datatype-struct",title:"struct type",description:'The struct data type is the data type used for API requests and responses. The example below shows how to define a struct data type for "User Information".',source:"@site/i18n/en/docusaurus-plugin-content-docs/current/tutorial-jssp/datatype-struct.md",sourceDirName:"tutorial-jssp",slug:"/tutorial-jssp/datatype-struct",permalink:"/en/docs/tutorial-jssp/datatype-struct",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Data type",permalink:"/en/docs/tutorial-jssp/datatype"},next:{title:"class \ud0c0\uc785",permalink:"/en/docs/tutorial-jssp/datatype-class"}},l={},c=[{value:"automatic serialization",id:"automatic-serialization",level:3},{value:"Convert between <code>entity</code> and <code>struct</code>",id:"convert-between-entity-and-struct",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"struct-type"},"struct type"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"struct")," data type is the data type used for API requests and responses. The example below shows how to define a ",(0,a.kt)("inlineCode",{parentName:"p"},"struct"),' data type for "User Information".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"[comment='User Information', desc='User Information.']\nstruct UserInfo {\n  [comment='user id']\n  userId UserID;\n  [comment='user email']\n  email Email;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"struct")," data type named ",(0,a.kt)("inlineCode",{parentName:"li"},"UserInfo")," represents user information.\nEach field provides a description via a comment:"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"userId"),": field representing the user ID"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"email"),": field representing the user's email")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"struct")," data type is the data type used for API requests and responses. This data type automatically generates JSON serialization code when converted to the language code used by each platform."),(0,a.kt)("h3",{id:"automatic-serialization"},"automatic serialization"),(0,a.kt)("p",null,"JSON serialization is the process of converting a data object into a string in JSON format. The ",(0,a.kt)("inlineCode",{parentName:"p"},"struct")," type handles this conversion automatically, saving developers the hassle of doing it manually."),(0,a.kt)("h3",{id:"convert-between-entity-and-struct"},"Convert between ",(0,a.kt)("inlineCode",{parentName:"h3"},"entity")," and ",(0,a.kt)("inlineCode",{parentName:"h3"},"struct")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"entity")," data type:")," The type is for the database in the database. When searching for this ",(0,a.kt)("inlineCode",{parentName:"p"},"entity")," type value and passing it as an API response, you must convert it to ",(0,a.kt)("inlineCode",{parentName:"p"},"struct")," type. Since copying fields one by one for this can be a cumbersome task, Coders automatically creates these transformations for you."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\nentity UserDetail {\n  userId UserID;\n  email Email;\n  nickname Nickname;\n  profileUrl Url;\n  createAt Datetime;\n}\n\nstruct UserInfo {\n  userId UserID;\n  email Email;\n  nickname Nickname;\n}\n\n... \n\nhandler getUser {\n\n  func execute(req @req) (res @res) {\n    ...\n    var userDetail = @query.selectUser(req.email);\n    res.userInfo = UserInfo();\n    res.userInfo.set(userDetail);\n    ...\n  }\n}\n\n")),(0,a.kt)("p",null,"The syntax ",(0,a.kt)("inlineCode",{parentName:"p"},"res.userInfo.set(userDetail)")," will cause coders to automatically generate copy code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class UserInfo {\n  public long userId;\n  public String email;\n  public String nickname;\n\n  public void set(UserDetail vo) {\n    this.userId = vo.userId;\n    this.email = vo.email;\n    this.nickname = vo.nickname;\n  }\n}\n")),(0,a.kt)("p",null,"The code above shows Java as an example, but other languages \u200b\u200bgenerate code the same way."),(0,a.kt)("p",null,"This simplifies the data type conversion and serialization process required during API development, and improves the efficiency and accuracy of development."))}d.isMDXComponent=!0}}]);